Properties klasörün içindeki launchSettings.json içinde hangi porttan çalıştığını görebilirsin.
Services
	-catalogAPI=>  5011
	-photostockAPI => 5012
	-basketAPI => 5013
	-discountAPI=>5014
	-orderAPI => 5015
	-fakePaymentAPI => 5016
identityserver=> 5001
Gateway => 5000
Web => 5010

*** IDENTITY ***
Identityserver kurulumu. identity clasörün içindeki controllerin içindeki user içinde var.
burdaki cliendid yi kurumid gibi düşünebilirsin. 
clientsecret gizli şifre kodu
Cliet credentials akış tipinde clientId ve clientsecret bilgisi gönderilir
Resource owner credentials ise clientId, clientsecret,email,password gönerilir. (USER İLE İLGİLİ İŞLEMLERDE KULLANILIR.)

***IDENTITYSERVER ENDPOINT
Dicsovery= https://identityserver4.readthedocs.io/en/latest/endpoints/discovery.html
Postman ile istek yaparken Get: http://localhost:5001/.well-known/openid-configuration
postman ile dönen bilgi
{
    "issuer": "http://localhost:5001",
    "jwks_uri": "http://localhost:5001/.well-known/openid-configuration/jwks",
    "authorization_endpoint": "http://localhost:5001/connect/authorize",
    "token_endpoint": "http://localhost:5001/connect/token",
    "userinfo_endpoint": "http://localhost:5001/connect/userinfo",
    "end_session_endpoint": "http://localhost:5001/connect/endsession",
    "check_session_iframe": "http://localhost:5001/connect/checksession",
    "revocation_endpoint": "http://localhost:5001/connect/revocation",
    "introspection_endpoint": "http://localhost:5001/connect/introspect",
    "device_authorization_endpoint": "http://localhost:5001/connect/deviceauthorization",
    "frontchannel_logout_supported": true,
    "frontchannel_logout_session_supported": true,
    "backchannel_logout_supported": true,
    "backchannel_logout_session_supported": true,
    "scopes_supported": [
        "email",
        "openid",
        "profile",
        "roles",
        "catalog_fullpermission",
        "photo_stock_fullpermission",
        "basket_fullpermission",
        "discount_fullpermission",
        "order_fullpermission",
        "payment_fullpermission",
        "gateway_fullpermission",
        "IdentityServerApi",
        "offline_access"
    ],
    "claims_supported": [
        "email",
        "email_verified",
        "sub",
        "name",
        "family_name",
        "given_name",
        "middle_name",
        "nickname",
        "preferred_username",
        "profile",
        "picture",
        "website",
        "gender",
        "birthdate",
        "zoneinfo",
        "locale",
        "updated_at",
        "role"
    ],
    "grant_types_supported": [
        "authorization_code",
        "client_credentials",
        "refresh_token",
        "implicit",
        "password",
        "urn:ietf:params:oauth:grant-type:device_code",
        "urn:ietf:params:oauth:grant-type:token-exchange"
    ],
    "response_types_supported": [
        "code",
        "token",
        "id_token",
        "id_token token",
        "code id_token",
        "code token",
        "code id_token token"
    ],
    "response_modes_supported": [
        "form_post",
        "query",
        "fragment"
    ],
    "token_endpoint_auth_methods_supported": [
        "client_secret_basic",
        "client_secret_post"
    ],
    "id_token_signing_alg_values_supported": [
        "RS256"
    ],
    "subject_types_supported": [
        "public"
    ],
    "code_challenge_methods_supported": [
        "plain",
        "S256"
    ],
    "request_parameter_supported": true
}

***SQL SERVER BİLGİLERİ
"DefaultConnection": "Server=localhost,1433;Database=IdentityDb; User Id=sa; Password=Password12*;Integrated Security=False;Trusted_Connection=True; MultipleActiveResultSets=true"
Discorey endpoint kullanıldı

*** MONGO DB BİLGİLERİ *** 
  "DatabaseSettings": {
    "CourseCollectionName": "Courses",
    "CategoryCollectionName": "Categories",
    "ConnectionString": "mongodb://localhost:27017", //mongodb default portu 27017- docker da localhost diye birşey olmadığı için localhost ismi container ismi gelmesi gerekiyor. bunun için ezilme işlemi yapılacak.Yani localhost u ezerek dockerin anlayacağı adres gelmesi için ezme işlemi yapılacak.
    "DatabaseName": "CatalogDb"
    //startupda IConfiguration da tanımlamak yerine yeni bir bir class oluşturuyoruz. Settings klasörün içinde (namespace FreeCourse.Services.Catalog.Settings) IDatabaseSettings adında bir interface oluşturuyoruz.
  },

  *** User kayıt olması işlemi ***
  Identity server klasörün içinde controller içindeki User içinde buluyor

  *** client token almak için yapılması gerekenler POSTMAN ile ***
  Nasıl yapılacağını gösteren dokümantasyon : https://identityserver4.readthedocs.io/en/latest/endpoints/token.html
  Post : http://localhost:5001/connect/token
  Body: x-www seç
  client_id : WebMvcClient
  client_secret : secret
  grant_type : client_credentials

  gelen tokeni encoding yapınca gelen bilgiler
  {
  "nbf": 1663420017,
  "exp": 1663423617,                   ********* 1 saatlik ömrü var.
  "iss": "http://localhost:5001",
  "aud": [                   ********* bunlar istek yapabilir
    "resource_catalog",
    "resource_gateway",
    "resource_photo_stock",
    "http://localhost:5001/resources"
  ],
  "client_id": "WebMvcClient",
  "jti": "2EF75486C35D648196AA543FA6635C5F",
  "iat": 1663420017,
  "scope": [
    "catalog_fullpermission",
    "gateway_fullpermission",
    "IdentityServerApi",                   *********identityserver bu scobu bekliyoruz demek
    "photo_stock_fullpermission"
  ]
}

*** Token devreye sokma ***

token devreye sokmak için nuget ten  Microsoft.AspNetCore.Authentication.JwtBearer yükle
            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme).AddJwtBearer(options =>
            {
                options.Authority = Configuration["IdentityServerURL"];//tokenin dağıttığı yer.appsetting tanımlaması yapılıyor oraya bak.
                options.Audience = "resource_catalog";//gelen tokenin içersinde aud içinde mutalaka resource_catalog olması gerekiyor.bu isim identity servis içindeki config içinden geliyor.
                options.RequireHttpsMetadata = false;//https i iptal ediyoruz. 
            });
